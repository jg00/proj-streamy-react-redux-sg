{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Code-NoSync/sg-react-01/prac-01/23-forms-with-redux-form/streams/client/src/components/streams/StreamCreate.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  renderInput({\n    input,\n    label\n  }) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    // console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default reduxForm({\n  form: \"streamCreate\" // a unique identifier for this form\n\n})(StreamCreate);\n/*\n  // 1 Wire up <input> onChange and value vs shortform of spreading properties {...formProps}\n  // Spreading properties is a JSX shortcut that takes all key/value pairs and add as properties to input element\n  renderInput(formProps) {\n    // console.log(formProps); // {input: {..}, meta: {..}}\n    return (\n      <input\n        onChange={formProps.input.onChange}\n        value={formProps.input.value}\n      />\n    );\n  }\n\n  // 2 Spread operator - These two are equivalent\n  function App1() {\n    return <Greeting firstName=\"Ben\" lastName=\"Hector\" />;\n  }\n\n  function App2() {\n    const props = {firstName: 'Ben', lastName: 'Hector'};\n    return <Greeting {...props} />;\n  }\n\n\n  // 3 Destructuring formProps.input further becomes renderInput({input})\n  // renderInput(formProps) {\n  //   return <input {...formProps.input} />;\n  // }\n\n\n*/","map":{"version":3,"sources":["/Users/jack/Code-NoSync/sg-react-01/prac-01/23-forms-with-redux-form/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","onSubmit","event","preventDefault","render","props","handleSubmit","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAmB;AAC5B,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,KAAR,CADF,eAEE,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF;AAMD;;AAEDE,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACdA,IAAAA,KAAK,CAACC,cAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AACE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKL,QAA7B,CADZ;AAEE,MAAA,SAAS,EAAC,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKH,WAApC;AAAiD,MAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAE,KAAKA,WAFlB;AAGE,MAAA,KAAK,EAAC,mBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAaD;;AA7BwC;;AAgC3C,eAAeH,SAAS,CAAC;AACvBY,EAAAA,IAAI,EAAE,cADiB,CACD;;AADC,CAAD,CAAT,CAEZX,YAFY,CAAf;AAIA","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  renderInput({ input, label }) {\n    return (\n      <div className=\"field\">\n        <label>{label}</label>\n        <input {...input} />\n      </div>\n    );\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    // console.log(this.props);\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui form\"\n      >\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field\n          name=\"description\"\n          component={this.renderInput}\n          label=\"Enter Description\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: \"streamCreate\", // a unique identifier for this form\n})(StreamCreate);\n\n/*\n  // 1 Wire up <input> onChange and value vs shortform of spreading properties {...formProps}\n  // Spreading properties is a JSX shortcut that takes all key/value pairs and add as properties to input element\n  renderInput(formProps) {\n    // console.log(formProps); // {input: {..}, meta: {..}}\n    return (\n      <input\n        onChange={formProps.input.onChange}\n        value={formProps.input.value}\n      />\n    );\n  }\n\n  // 2 Spread operator - These two are equivalent\n  function App1() {\n    return <Greeting firstName=\"Ben\" lastName=\"Hector\" />;\n  }\n\n  function App2() {\n    const props = {firstName: 'Ben', lastName: 'Hector'};\n    return <Greeting {...props} />;\n  }\n\n\n  // 3 Destructuring formProps.input further becomes renderInput({input})\n  // renderInput(formProps) {\n  //   return <input {...formProps.input} />;\n  // }\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}