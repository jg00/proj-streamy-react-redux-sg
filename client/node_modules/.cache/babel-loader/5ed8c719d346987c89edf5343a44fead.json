{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Code-NoSync/sg-react-01/prac-01/24-rest-based/streams/client/src/components/streams/StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams(); // Call to populate our redux list of streams\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    }, \"StreamList\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: state.streams\n  };\n};\n\nexport default connect(null, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/jack/Code-NoSync/sg-react-01/prac-01/24-rest-based/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","render","mapStateToProps","state","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX,GADkB,CACS;AAC5B;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAPsC;;AAUzC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC;AADV,GAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAgCC,UAAhC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams(); // Call to populate our redux list of streams\n  }\n\n  render() {\n    return <div>StreamList</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    streams: state.streams,\n  };\n};\n\nexport default connect(null, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}