{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Code-NoSync/sg-react-01/prac-01/21-authentication/streams/client/src/components/GoogleAuth.js\";\nimport React from \"react\";\n\nclass GoogleAuth extends React.Component {\n  componentDidMount() {\n    // Load additional modules\n    window.gapi.load(\"client:auth2\", () => {\n      // Initializes the GoogleAuth object. If the user has already signed in, the GoogleAuth object restores the user's sign-in state from the previous session.\n      // When you initialize the GoogleAuth object, you configre the objet with your OAuth 2.0 client ID and any additional options you want to specify.\n      // Also returns gapi.auth2.GoogleAuth object.\n      window.gapi.client.init({\n        clientId: \"1029807907749-a8snu3tfvj6tcd1qfmdcu5cv1patb7mb.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        // Get a reference to the GoogleAuth object\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth2.isSignedIn().get()\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"Google Auth\");\n  }\n\n}\n\nexport default GoogleAuth;\n/*\n  https://developers.google.com/identity/sign-in/web/reference\n  clentId - used to identify a single app to Google's OAuth servers.\n  Load client:auth2 libraries and then initialize via callback.\n*/","map":{"version":3,"sources":["/Users/jack/Code-NoSync/sg-react-01/prac-01/21-authentication/streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","isSignedIn","get","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrC;AACA;AACA;AACAF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACN,2EAFE;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV;AACA,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWG,UAAX,GAAwBC,GAAxB;AAAd,SAAd;AACD,OAVH;AAWD,KAfD;AAgBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AAvBsC;;AA0BzC,eAAejB,UAAf;AAEA","sourcesContent":["import React from \"react\";\n\nclass GoogleAuth extends React.Component {\n  componentDidMount() {\n    // Load additional modules\n    window.gapi.load(\"client:auth2\", () => {\n      // Initializes the GoogleAuth object. If the user has already signed in, the GoogleAuth object restores the user's sign-in state from the previous session.\n      // When you initialize the GoogleAuth object, you configre the objet with your OAuth 2.0 client ID and any additional options you want to specify.\n      // Also returns gapi.auth2.GoogleAuth object.\n      window.gapi.client\n        .init({\n          clientId:\n            \"1029807907749-a8snu3tfvj6tcd1qfmdcu5cv1patb7mb.apps.googleusercontent.com\",\n          scope: \"email\",\n        })\n        .then(() => {\n          // Get a reference to the GoogleAuth object\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.setState({ isSignedIn: this.auth2.isSignedIn().get() });\n        });\n    });\n  }\n\n  render() {\n    return <div>Google Auth</div>;\n  }\n}\n\nexport default GoogleAuth;\n\n/*\n  https://developers.google.com/identity/sign-in/web/reference\n  clentId - used to identify a single app to Google's OAuth servers.\n  Load client:auth2 libraries and then initialize via callback.\n*/\n"]},"metadata":{},"sourceType":"module"}